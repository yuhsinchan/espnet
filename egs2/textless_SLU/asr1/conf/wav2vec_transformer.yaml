# network architecture
# encoder related
encoder: transformer
encoder_conf:
    output_size: 256
    attention_heads: 4
    linear_units: 2048
    num_blocks: 8
    dropout_rate: 0.1
    positional_dropout_rate: 0.1
    attention_dropout_rate: 0.1
    input_layer: conv2d
    normalize_before: true
    macaron_style: true
    pos_enc_layer_type: "rel_pos"
    selfattention_layer_type: "rel_selfattn"
    activation_type: "swish"
    use_cnn_module:  true
    cnn_module_kernel: 31

decoder: transformer
decoder_conf:
    attention_heads: 4
    linear_units: 2048
    num_blocks: 4
    dropout_rate: 0.1
    positional_dropout_rate: 0.1
    self_attention_dropout_rate: 0.1
    src_attention_dropout_rate: 0.1

optim: adam
optim_conf:
    lr: 0.0002
scheduler: warmuplr     # pytorch v1.1.0+ required
scheduler_conf:
    warmup_steps: 25000
max_epoch: 50

freeze_param: [
"frontend.upstream"
]

frontend_conf:
  n_fft: 512
  hop_length: 256

frontend: s3prl
frontend_conf:
    frontend_conf:
        upstream: wav2vec  # Note: If the upstream is changed, please change the input_size in the preencoder.
    download_dir: ./hub
    multilayer_feature: True

preencoder: linear
preencoder_conf:
    input_size: 512  # Note: If the upstream is changed, please change this value accordingly.
    output_size: 83

model_conf:
    ctc_weight: 0.5
    lsm_weight: 0.1
    length_normalized_loss: false
    extract_feats_in_collect_stats: false   # Note: "False" means during collect stats (stage 10), generating dummy stats files rather than extract_feats by forward frontend.

best_model_criterion:
-   - valid
    - acc
    - max
keep_nbest_models: 10